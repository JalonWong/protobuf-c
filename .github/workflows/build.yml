name: Test Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  # distcheck:
  #   strategy:
  #     matrix:
  #       os: [macos-latest, ubuntu-20.04]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install Linux dependencies
  #       if: startsWith(matrix.os, 'ubuntu')
  #       run: sudo apt-get install -y protobuf-compiler libprotobuf-dev libprotoc-dev
  #     - name: Install Mac dependencies
  #       if: startsWith(matrix.os, 'macos')
  #       run: brew install protobuf automake
  #     - name: Run distcheck
  #       run: |
  #         ./autogen.sh
  #         ./configure
  #         make -j${nproc} distcheck VERBOSE=1

  # distcheck-multiarch:
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     matrix:
  #       include:
  #         - arch: armv7
  #         - arch: aarch64
  #         - arch: s390x
  #         - arch: ppc64le
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: uraimo/run-on-arch-action@v2.0.9
  #       name: Install dependencies and run distcheck
  #       id: runcmd
  #       with:
  #         arch: ${{ matrix.arch }}
  #         githubToken: ${{ github.token }}
  #         distro: ubuntu20.04
  #         install: |
  #           apt-get update -q -y
  #           apt-get install -q -y build-essential autoconf automake libtool pkg-config
  #           apt-get install -q -y protobuf-compiler libprotobuf-dev libprotoc-dev

  #         run: |
  #           ./autogen.sh
  #           ./configure
  #           make -j3 distcheck VERBOSE=1

  # valgrind:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install dependencies
  #       run: sudo apt-get install -y protobuf-compiler libprotobuf-dev libprotoc-dev valgrind
  #     - name: Run distcheck with valgrind
  #       run: |
  #         ./autogen.sh
  #         ./configure --enable-valgrind-tests CFLAGS="-fsanitize=undefined -fno-sanitize-recover=undefined"
  #         make -j${nproc} distcheck DISTCHECK_CONFIGURE_FLAGS="--enable-valgrind-tests CFLAGS=\"-fsanitize=undefined -fno-sanitize-recover=undefined\"" VERBOSE=1

  coverage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get install -y protobuf-compiler libprotobuf-dev libprotoc-dev lcov
      - name: Run coverage build
        run: |
          ./autogen.sh
          ./configure --enable-code-coverage
          make -j${nproc}
          mkdir coverage
          lcov --no-external --capture --initial --directory . --output-file ./coverage/lcov.info --include '*protobuf-c.c'
          make check
          lcov --no-external --capture --directory . --output-file ./coverage/lcov.info --include '*protobuf-c.c'
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  bazel:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-22.04, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Init msbuild
        if: startsWith(matrix.os, 'win')
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: '[16,17)'
          msbuild-architecture: x64
      - name: Init python
        if: startsWith(matrix.os, 'win')
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Run tests
        run: python ci.py test
